}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), radius = ~sqrt(Deaths)/100
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), radius = ~sqrt(Deaths)/10
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), radius = ~sqrt(Deaths)/2
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>% fitBounds(~min(lng), ~min(lat),
~max(lng), ~max(lat)) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
#setView(-95.7129, 37.0902, zoom = 4) %>%
addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), radius = ~sqrt(Deaths)/2
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>% fitBounds(~min(lat), ~min(lng),
~max(lat), ~max(lng)) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
#setView(-95.7129, 37.0902, zoom = 4) %>%
addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), radius = ~sqrt(Deaths)/2
)
})
}
shinyApp(ui, server)
covid %>% mutate(severe = if(covid$Confirmed >= 150000) {
TRUE
} else {
FALSE
}
J <- covid %>% mutate(severe = ifelse(covid$Confirmed >= 150000, TRUE, FALSE))
jay <- covid %>% mutate(severe = ifelse(covid$Confirmed >= 150000, TRUE, FALSE))
View(jay)
jay %>% select(Confirmed, severe)
jay %>% select(Confirmed, severe) %>% filter(severe == TRUE)
covid <- covid %>% rename(lng  = Long_, lat = Lat) %>% mutate(severe = ifelse(covid$Confirmed >= 100000, TRUE, FALSE))
covid <- read_csv("05-27-2020.csv")
covid <- covid %>% rename(lng  = Long_, lat = Lat) %>% mutate(severe = ifelse(covid$Confirmed >= 100000, TRUE, FALSE))
covid <- read_csv("05-27-2020.csv")
covid <- covid %>% rename(lng  = Long_, lat = Lat) %>% mutate(severe = ifelse(covid$Confirmed >= 100000, TRUE, FALSE))
pal <- colorFactor(c("firebrick", "steelblue"), covid$severe)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe)
)
})
}
shinyApp(ui, server)
pal <- colorFactor(c("steelblue", "red"), covid$severe)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe)
)
})
}
shinyApp(ui, server)
pal <- colorFactor(c("blue", "red"), covid$severe)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe)
)
})
}
shinyApp(ui, server)
pal <- colorFactor(c("lightblue", "red"), covid$severe)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe)
)
})
}
shinyApp(ui, server)
pal <- colorFactor(c("darkblue", "red"), covid$severe)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe)
)
})
}
shinyApp(ui, server)
pal <- colorFactor(c("blue", "red"), covid$severe)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe)
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = 5
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = 10
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = 20
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = 20
)
})
}
shinyApp(ui, server)
jay <- covid %>% mutate(radius = ifelse(covid$Confirmed <= 10000, 10,
ifelse(covid$Confirmed <= 30000, 15,
ifelse(covid$Confirmed <= 50000, 20,30
)
)
)
)
View(jay)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = ~jay$radius
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = ~jay$radius
)
})
}
shinyApp(ui, server)
covid <- read_csv("05-27-2020.csv")
covid <- covid %>% rename(lng  = Long_, lat = Lat) %>% mutate(severe = ifelse(covid$Confirmed >= 100000, TRUE, FALSE),
circlesize = ifelse(covid$Confirmed <= 10000, 10,
ifelse(covid$Confirmed <= 30000, 15,
ifelse(covid$Confirmed <= 50000, 20,30
)))
)
pal <- colorFactor(c("blue", "red"), covid$severe)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 3000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = ~circlesize
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 5000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = ~circlesize
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 5000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = ~circlesize
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 5000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(covid$Province_State, '\n', (as.character(covid$Confirmed)), 'cases, ',
as.character(covid$Deaths), 'deaths'), color = ~pal(severe),
radius = ~circlesize
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 5000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = paste(Province_State, '\n', (as.character(Confirmed)), 'cases, ',
as.character(Deaths), 'deaths'), color = ~pal(severe),
radius = ~circlesize
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 5000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = ~paste(Province_State, '\n', (as.character(Confirmed)), 'cases, ',
as.character(Deaths), 'deaths'), color = ~pal(severe),
radius = ~circlesize
)
})
}
shinyApp(ui, server)
ui <- bootstrapPage(
leafletOutput('map', width = "200%", height = 1000) ,
absolutePanel(top =10, right = 30, id = 'controls',
sliderInput('cases', 'Number of cases', 1, 500000, 5000)
)
)
server <- function(input, output, session){
output$map <-  renderLeaflet({
covid %>% filter(Confirmed <= input$cases) %>%
#%>% filter(Deaths <= 100)
leaflet() %>% addProviderTiles(providers$Stamen.Toner) %>%
#fitBounds(~min(covid$Lat), ~min(covid$Long_), ~max(covid$Lat), ~max(covid$Long_)) %>%
setView(-95.7129, 37.0902, zoom = 4) %>% addCircleMarkers( weight = ~(Deaths/1000),
popup = ~paste(Province_State, '\n', (as.character(Confirmed)), 'cases, ',
as.character(Deaths), 'deaths'), color = ~pal(severe),
radius = ~circlesize
)
})
}
shinyApp(ui, server)
